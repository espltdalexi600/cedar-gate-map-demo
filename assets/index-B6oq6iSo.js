(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function i(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=i(e);fetch(e.href,n)}})();AFRAME.registerShader("gradientshader",{schema:{topColor:{type:"color",default:"1 0 0",is:"uniform"},bottomColor:{type:"color",default:"0 0 1",is:"uniform"}},vertexShader:["varying vec3 vWorldPosition;","void main() {"," vec4 worldPosition = modelMatrix * vec4( position, 1.0 );"," vWorldPosition = worldPosition.xyz;"," gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );","}"].join(`
`),fragmentShader:["#include <common>","#include <dithering_pars_fragment>","uniform vec3 bottomColor;","uniform vec3 topColor;","uniform float offset;","varying vec3 vWorldPosition;","void main() {"," float h = normalize( vWorldPosition ).y;"," gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max(h, 0.0 ), 0.8 ), 0.0 ) ), 1.0 );"," #include <dithering_fragment>","}"].join(`
`)});AFRAME.registerComponent("move-pin",{schema:{targetId:{default:""}},init(){const{targetId:s}=this.data;if(this.targetEl=document.getElementById(s),!this.targetEl)throw new Error(`[move-pin] Couldn't find el with id '${s}'`);this.canvasEl=this.el.sceneEl.renderer.domElement,this.camera=this.el.sceneEl.camera,this.worldPosition=new THREE.Vector3},tick(){this.el.object3D.getWorldPosition(this.worldPosition);const s=this.worldPosition.clone().project(this.camera),t=(s.x+1)/2*this.canvasEl.clientWidth,i=(-s.y+1)/2*this.canvasEl.clientHeight;this.targetEl.style.transform=`translate(${t}px, ${i}px)`}});AFRAME.registerComponent("move-to-target",{schema:{targetId:{default:""},debug:{default:!1},target:{default:{x:0,y:0,z:0}},initialPosition:{default:{x:0,y:0,z:0}}},init(){const{targetId:s}=this.data;if(this.targetEl=document.getElementById(s),!this.targetEl)throw new Error(`[move-to-target] Couldn't find el with id '${s}'`);this.scene=this.el.sceneEl.object3D,this.camera=this.el.getObject3D("camera"),this.targetPosition=new THREE.Vector3,this.targetEl.object3D.getWorldPosition(this.targetPosition);const t=this.buildCurve(this.el.getAttribute("position"),this.targetPosition,1,1);this.moveCamera({path:t,target:this.targetPosition})},remove(){this.moveCameraToDefault()},buildCurve(s,t,i=0,o=0){const{debug:e}=this.data,n=new THREE.Vector3(s.x,s.y,s.z),a=this.getControlPoint(s,t,1),r=new THREE.Vector3(t.x,t.y+i,t.z),l=new THREE.Vector2(s.x-r.x,s.z-r.z);l.divideScalar(l.length()),r.set(r.x+l.x*o,r.y,r.z+l.y*o);const p=new THREE.QuadraticBezierCurve3(n,a,r);if(e){const c=p.getPoints(30),d=new THREE.BufferGeometry().setFromPoints(c),h=new THREE.Line(d,new THREE.LineBasicMaterial({color:16711680,transparent:!0,opacity:1}));h.name="debug_line",this.scene.add(h)}return p},moveCamera({path:s,target:t,onComplete:i}){const o=this,e=s.getLength(),n={value:0},a=new THREE.Quaternion().copy(o.camera.quaternion),r=s.getPointAt(1),l=new THREE.Object3D;l.position.copy(o.el.getAttribute("position")),l.quaternion.copy(o.camera.quaternion),o.el.setAttribute("position",r),o.camera.lookAt(t);const p=new THREE.Quaternion().copy(o.camera.quaternion);o.el.setAttribute("position",l.position),o.camera.quaternion.copy(l.quaternion),this.tween&&this.tween.kill(),this.tween=gsap.to(n,{duration:e/2,value:1,ease:Power1.easeInOut,onUpdate:function(c){const d=s.getPointAt(n.value);o.el.setAttribute("position",d),o.camera.lookAt(t);const h=new THREE.Quaternion().copy(o.camera.quaternion),f=new THREE.Quaternion().copy(p);f.slerp(h,n.value*n.value*n.value),c.quaternion.slerpQuaternions(a,f,n.value)},onUpdateParams:[o.camera],onComplete:i})},moveCameraToDefault(){const{target:s,initialPosition:t}=this.data,i=this.buildCurve(this.el.getAttribute("position"),t);this.moveCamera({path:i,target:new THREE.Vector3(s.x,s.y,s.z),onComplete:()=>{}})},shortestAngle(s,t){return Math.atan2(Math.sin(t-s),Math.cos(t-s))},getControlPoint(s,t,i){const o=new THREE.Spherical().setFromVector3(s),e=new THREE.Spherical().setFromVector3(t),n=(o.radius+e.radius)/2,a=o.phi+this.shortestAngle(e.phi,o.phi)/2,r=(o.theta+e.theta)/2,l=new THREE.Spherical(n,a,r);return l.radius*=i,new THREE.Vector3().setFromSpherical(l)}});const _="modulepreload",b=function(s,t){return new URL(s,t).href},v={},y=function(t,i,o){let e=Promise.resolve();if(i&&i.length>0){let p=function(c){return Promise.all(c.map(d=>Promise.resolve(d).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};const a=document.getElementsByTagName("link"),r=document.querySelector("meta[property=csp-nonce]"),l=r?.nonce||r?.getAttribute("nonce");e=p(i.map(c=>{if(c=b(c,o),c in v)return;v[c]=!0;const d=c.endsWith(".css"),h=d?'[rel="stylesheet"]':"";if(!!o)for(let m=a.length-1;m>=0;m--){const g=a[m];if(g.href===c&&(!d||g.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${c}"]${h}`))return;const u=document.createElement("link");if(u.rel=d?"stylesheet":_,d||(u.as="script"),u.crossOrigin="",u.href=c,l&&u.setAttribute("nonce",l),document.head.appendChild(u),d)return new Promise((m,g)=>{u.addEventListener("load",m),u.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${c}`)))})}))}function n(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return e.then(a=>{for(const r of a||[])r.status==="rejected"&&n(r.reason);return t().catch(n)})};class E{static async loadTweakpane(){const{Pane:t}=await y(async()=>{const{Pane:i}=await import("https://unpkg.com/tweakpane@4.0.5/dist/tweakpane.min.js");return{Pane:i}},[],import.meta.url);return t}static waitForComponentInit(t,i,o){t&&(t.components[i]?o():t.addEventListener("componentinitialized",({detail:e})=>{e.name===i&&o()}))}_options={sceneEl:document.getElementById("scene"),cameraEl:document.getElementById("camera"),mapPivotEl:document.getElementById("map-pivot"),mapEl:document.getElementById("map"),pinAnchorEls:document.querySelectorAll("[id^=pin-anchor]"),pinEls:document.querySelectorAll("[id^=pin]"),hemisphereLightEl:document.getElementById("hemisphere-light"),directionalLightEl:document.getElementById("directional-light"),cameraLookAt:new THREE.Vector3,debug:!1};_defaultCameraPosition=new THREE.Vector3;constructor(t={}){Object.assign(this._options,t),this._init()}_rotateCameraToDefault(){const t=this._options.cameraEl.getObject3D("camera");t&&t.lookAt(this._options.cameraLookAt)}_setCameraFolder(){if(this._options.cameraEl){const t={position:this._options.cameraEl.getAttribute("position")};this._debugPanel.addFolder({title:"Camera",expanded:!1}).addBinding(t,"position").on("change",({value:i})=>{this._options.cameraEl.setAttribute("position",i),this._rotateCameraToDefault()})}}_setMapFolder(){if(this._options.mapPivotEl&&this._options.mapEl){const t={position:this._options.mapEl.getAttribute("position"),scale:this._options.mapEl.getAttribute("scale")},i={rotation:this._options.mapPivotEl.getAttribute("rotation")},o=this._debugPanel.addFolder({title:"Map",expanded:!1});o.addBinding(i,"rotation").on("change",({value:e})=>{this._options.mapPivotEl.setAttribute("rotation",e)}),Object.keys(t).forEach(e=>{o.addBinding(t,e).on("change",({value:n})=>{this._options.mapEl.setAttribute(e,n)})})}}_setPinAnchorsFolder(){if(this._options.pinAnchorEls.length){const t={showPinAnchors:!1},i=this._debugPanel.addFolder({title:"Pin Anchors",expanded:!1});i.addBinding(t,"showPinAnchors").on("change",({value:o})=>{this._options.pinAnchorEls.forEach(e=>{e.setAttribute("visible",o)})}),this._options.pinAnchorEls.forEach(o=>{const e={position:o.getAttribute("position")};i.addBinding(e,"position",{step:.01}).on("change",({value:n})=>{o.setAttribute("position",n)})})}}_setHemisphereLightFolder(){if(this._options.hemisphereLightEl){const t=this._options.hemisphereLightEl.getAttribute("light"),i=this._debugPanel.addFolder({title:"Hemisphere Light",expanded:!1});[{object:t,key:"intensity",params:{step:.1}},{object:t,key:"color"}].forEach(({object:o,key:e,params:n})=>{i.addBinding(o,e,n).on("change",({value:a})=>{this._options.directionalLightEl.setAttribute("light",{...this._options.directionalLightEl.getAttribute("light"),[e]:a})})})}}_setDirectionalLightFolder(){if(this._options.directionalLightEl){const t={position:this._options.directionalLightEl.getAttribute("position")},i=this._options.directionalLightEl.getAttribute("light"),o=this._debugPanel.addFolder({title:"Directional Light",expanded:!1});o.addBinding(t,"position",{step:.1}).on("change",({value:e})=>{this._options.directionalLightEl.setAttribute("position",e)}),[{object:i,key:"intensity",params:{step:.1}},{object:i,key:"color"},{object:i,key:"castShadow"},{object:i,key:"shadowBias",params:{step:1e-5}},{object:i,key:"shadowRadius"}].forEach(({object:e,key:n,params:a})=>{o.addBinding(e,n,a).on("change",({value:r})=>{this._options.directionalLightEl.setAttribute("light",{...this._options.directionalLightEl.getAttribute("light"),[n]:r})})})}}_addListeners(){this._options.pinEls.forEach(t=>{t.addEventListener("click",i=>{this._options.cameraEl.setAttribute("move-to-target",{targetId:i.target.dataset.anchorId,initialPosition:{x:this._defaultCameraPosition.x,y:this._defaultCameraPosition.y,z:this._defaultCameraPosition.z},debug:this._options.debug})})})}_init(){this._options.debug&&(this._options.cameraEl.setAttribute("look-controls",{enabled:!0}),E.loadTweakpane().then(t=>{this._debugPanel=new t({title:"Settings",expanded:!1}),this._setCameraFolder(),this._setMapFolder(),this._setPinAnchorsFolder(),this._setHemisphereLightFolder(),this._setDirectionalLightFolder()})),this._defaultCameraPosition=this._options.cameraEl.getAttribute("position"),E.waitForComponentInit(this._options.cameraEl,"camera",()=>{this._rotateCameraToDefault()}),this._addListeners()}moveCameraToDefault(){this._options.cameraEl.removeAttribute("move-to-target")}}const w=new E({debug:window.location.hash==="#debug"}),P=document.getElementById("reset-camera-button");P.addEventListener("click",()=>{w.moveCameraToDefault()});
