(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function o(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function e(i){if(i.ep)return;i.ep=!0;const s=o(i);fetch(i.href,s)}})();AFRAME.registerShader("gradientshader",{schema:{topColor:{type:"color",default:"1 0 0",is:"uniform"},bottomColor:{type:"color",default:"0 0 1",is:"uniform"}},vertexShader:["varying vec3 vWorldPosition;","void main() {"," vec4 worldPosition = modelMatrix * vec4( position, 1.0 );"," vWorldPosition = worldPosition.xyz;"," gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );","}"].join(`
`),fragmentShader:["#include <common>","#include <dithering_pars_fragment>","uniform vec3 bottomColor;","uniform vec3 topColor;","uniform float offset;","varying vec3 vWorldPosition;","void main() {"," float h = normalize( vWorldPosition ).y;"," gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max(h, 0.0 ), 0.8 ), 0.0 ) ), 1.0 );"," #include <dithering_fragment>","}"].join(`
`)});AFRAME.registerComponent("move-pin",{schema:{targetId:{default:""}},init(){const{targetId:n}=this.data;if(this.targetEl=document.getElementById(n),!this.targetEl)throw new Error(`[move-pin] Couldn't find el with id '${n}'`);this.canvasEl=this.el.sceneEl.renderer.domElement,this.camera=this.el.sceneEl.camera,this.worldPosition=new THREE.Vector3},tick(){this.el.object3D.getWorldPosition(this.worldPosition);const n=this.worldPosition.clone().project(this.camera),t=(n.x+1)/2*this.canvasEl.clientWidth,o=(-n.y+1)/2*this.canvasEl.clientHeight;this.targetEl.style.transform=`translate(${t}px, ${o}px)`}});AFRAME.registerComponent("move-to-target",{schema:{targetId:{default:""},debug:{default:!1},target:{default:{x:0,y:0,z:0}},initialPosition:{default:{x:0,y:0,z:0}}},init(){const{targetId:n}=this.data;if(this.targetEl=document.getElementById(n),!this.targetEl)throw new Error(`[move-to-target] Couldn't find el with id '${n}'`);this.scene=this.el.sceneEl.object3D,this.camera=this.el.getObject3D("camera"),this.targetPosition=new THREE.Vector3,this.targetEl.object3D.getWorldPosition(this.targetPosition);const t=this.buildCurve(this.el.getAttribute("position"),this.targetPosition,1,1);this.moveCamera({path:t,target:this.targetPosition})},remove(){this.moveCameraToDefault()},buildCurve(n,t,o=0,e=0){const{debug:i}=this.data,s=new THREE.Vector3(n.x,n.y,n.z),a=this.getControlPoint(n,t,1),r=new THREE.Vector3(t.x,t.y+o,t.z),l=new THREE.Vector2(n.x-r.x,n.z-r.z);l.divideScalar(l.length()),r.set(r.x+l.x*e,r.y,r.z+l.y*e);const m=new THREE.QuadraticBezierCurve3(s,a,r);if(i){const c=m.getPoints(30),d=new THREE.BufferGeometry().setFromPoints(c),h=new THREE.Line(d,new THREE.LineBasicMaterial({color:16711680,transparent:!0,opacity:1}));h.name="debug_line",this.scene.add(h)}return m},moveCamera({path:n,target:t,onComplete:o}){const e=this,i=n.getLength(),s={value:0},a=new THREE.Quaternion().copy(e.camera.quaternion),r=n.getPointAt(1),l=new THREE.Object3D;l.position.copy(e.el.getAttribute("position")),l.quaternion.copy(e.camera.quaternion),e.el.setAttribute("position",r),e.camera.lookAt(t);const m=new THREE.Quaternion().copy(e.camera.quaternion);e.el.setAttribute("position",l.position),e.camera.quaternion.copy(l.quaternion),this.tween&&this.tween.kill(),this.tween=gsap.to(s,{duration:i/2,value:1,ease:Power1.easeInOut,onUpdate:function(c){const d=n.getPointAt(s.value);e.el.setAttribute("position",d),e.camera.lookAt(t);const h=new THREE.Quaternion().copy(e.camera.quaternion),f=new THREE.Quaternion().copy(m);f.slerp(h,s.value*s.value*s.value),c.quaternion.slerpQuaternions(a,f,s.value)},onUpdateParams:[e.camera],onComplete:o})},moveCameraToDefault(){const{target:n,initialPosition:t}=this.data,o=this.buildCurve(this.el.getAttribute("position"),t);this.moveCamera({path:o,target:new THREE.Vector3(n.x,n.y,n.z),onComplete:()=>{}})},shortestAngle(n,t){return Math.atan2(Math.sin(t-n),Math.cos(t-n))},getControlPoint(n,t,o){const e=new THREE.Spherical().setFromVector3(n),i=new THREE.Spherical().setFromVector3(t),s=(e.radius+i.radius)/2,a=e.phi+this.shortestAngle(i.phi,e.phi)/2,r=(e.theta+i.theta)/2,l=new THREE.Spherical(s,a,r);return l.radius*=o,new THREE.Vector3().setFromSpherical(l)}});const v="modulepreload",b=function(n,t){return new URL(n,t).href},_={},y=function(t,o,e){let i=Promise.resolve();if(o&&o.length>0){let m=function(c){return Promise.all(c.map(d=>Promise.resolve(d).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};const a=document.getElementsByTagName("link"),r=document.querySelector("meta[property=csp-nonce]"),l=r?.nonce||r?.getAttribute("nonce");i=m(o.map(c=>{if(c=b(c,e),c in _)return;_[c]=!0;const d=c.endsWith(".css"),h=d?'[rel="stylesheet"]':"";if(!!e)for(let g=a.length-1;g>=0;g--){const E=a[g];if(E.href===c&&(!d||E.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${c}"]${h}`))return;const p=document.createElement("link");if(p.rel=d?"stylesheet":v,d||(p.as="script"),p.crossOrigin="",p.href=c,l&&p.setAttribute("nonce",l),document.head.appendChild(p),d)return new Promise((g,E)=>{p.addEventListener("load",g),p.addEventListener("error",()=>E(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return i.then(a=>{for(const r of a||[])r.status==="rejected"&&s(r.reason);return t().catch(s)})};class u{static async loadTweakpane(){const{Pane:t}=await y(async()=>{const{Pane:o}=await import("https://unpkg.com/tweakpane@4.0.5/dist/tweakpane.min.js");return{Pane:o}},[],import.meta.url);return t}static waitForComponentInit(t,o,e){t&&(t.components[o]?e():t.addEventListener("componentinitialized",({detail:i})=>{i.name===o&&e()}))}_options={sceneEl:document.getElementById("scene"),cameraEl:document.getElementById("camera"),mapPivotEl:document.getElementById("map-pivot"),mapEl:document.getElementById("map"),pinAnchorEls:document.querySelectorAll("[id^=pin-anchor]"),pinEls:document.querySelectorAll("[id^=pin]"),hemisphereLightEl:document.getElementById("hemisphere-light"),directionalLightEl:document.getElementById("directional-light"),cameraLookAt:new THREE.Vector3,debug:!1};_defaultCameraPosition=new THREE.Vector3;constructor(t={}){Object.assign(this._options,t),this._init()}_rotateCameraToDefault(){const t=this._options.cameraEl.getObject3D("camera");t&&t.lookAt(this._options.cameraLookAt)}_setCameraFolder(){if(this._options.cameraEl){const t=this._debugPanel.addFolder({title:"Camera",expanded:!1});u.waitForComponentInit(this._options.cameraEl,"position",()=>{const o={position:this._options.cameraEl.getAttribute("position")};t.addBinding(o,"position").on("change",({value:e})=>{this._options.cameraEl.setAttribute("position",e),this._rotateCameraToDefault()})})}}_setMapFolder(){if(this._options.mapPivotEl&&this._options.mapEl){const t=this._debugPanel.addFolder({title:"Map",expanded:!1});u.waitForComponentInit(this._options.mapEl,"position",()=>{const o={position:this._options.mapEl.getAttribute("position")};t.addBinding(o,"position").on("change",({value:e})=>{this._options.mapEl.setAttribute("position",e)})}),u.waitForComponentInit(this._options.mapPivotEl,"rotation",()=>{const o={rotation:this._options.mapPivotEl.getAttribute("rotation")};t.addBinding(o,"rotation").on("change",({value:e})=>{this._options.mapPivotEl.setAttribute("rotation",e)})}),u.waitForComponentInit(this._options.mapEl,"position",()=>{const o={scale:this._options.mapEl.getAttribute("scale")};t.addBinding(o,"scale").on("change",({value:e})=>{this._options.mapEl.setAttribute("scale",e)})})}}_setPinAnchorsFolder(){if(this._options.pinAnchorEls.length){const t={showPinAnchors:!1},o=this._debugPanel.addFolder({title:"Pin Anchors",expanded:!1});o.addBinding(t,"showPinAnchors").on("change",({value:e})=>{this._options.pinAnchorEls.forEach(i=>{i.setAttribute("visible",e)})}),this._options.pinAnchorEls.forEach(e=>{const i={position:e.getAttribute("position")};o.addBinding(i,"position",{step:.01}).on("change",({value:s})=>{e.setAttribute("position",s)})})}}_setHemisphereLightFolder(){if(console.log("_setHemisphereLightFolder"),this._options.hemisphereLightEl){const t=this._options.hemisphereLightEl.getAttribute("light"),o=this._debugPanel.addFolder({title:"Hemisphere Light",expanded:!1});[{object:t,key:"intensity",params:{step:.1}},{object:t,key:"color"}].forEach(({object:e,key:i,params:s})=>{o.addBinding(e,i,s).on("change",({value:a})=>{this._options.directionalLightEl.setAttribute("light",{...this._options.directionalLightEl.getAttribute("light"),[i]:a})})})}}_setDirectionalLightFolder(){if(console.log("_setDirectionalLightFolder"),this._options.directionalLightEl){const t={position:this._options.directionalLightEl.getAttribute("position")},o=this._options.directionalLightEl.getAttribute("light"),e=this._debugPanel.addFolder({title:"Directional Light",expanded:!1});e.addBinding(t,"position",{step:.1}).on("change",({value:i})=>{this._options.directionalLightEl.setAttribute("position",i)}),[{object:o,key:"intensity",params:{step:.1}},{object:o,key:"color"},{object:o,key:"castShadow"},{object:o,key:"shadowBias",params:{step:1e-5}},{object:o,key:"shadowRadius"}].forEach(({object:i,key:s,params:a})=>{e.addBinding(i,s,a).on("change",({value:r})=>{this._options.directionalLightEl.setAttribute("light",{...this._options.directionalLightEl.getAttribute("light"),[s]:r})})})}}_addListeners(){this._options.pinEls.forEach(t=>{t.addEventListener("click",o=>{this._options.cameraEl.setAttribute("move-to-target",{targetId:o.target.dataset.anchorId,initialPosition:{x:this._defaultCameraPosition.x,y:this._defaultCameraPosition.y,z:this._defaultCameraPosition.z},debug:this._options.debug})})})}_init(){this._options.debug&&(this._options.cameraEl.setAttribute("look-controls",{enabled:!0}),u.loadTweakpane().then(t=>{this._debugPanel=new t({title:"Settings",expanded:!1}),this._options.sceneEl.hasLoaded?(this._setCameraFolder(),this._setMapFolder(),this._setPinAnchorsFolder(),this._setHemisphereLightFolder(),this._setDirectionalLightFolder()):this._options.sceneEl.addEventListener("loaded",()=>{this._setCameraFolder(),this._setMapFolder(),this._setPinAnchorsFolder(),this._setHemisphereLightFolder(),this._setDirectionalLightFolder()})})),this._defaultCameraPosition=this._options.cameraEl.getAttribute("position"),u.waitForComponentInit(this._options.cameraEl,"camera",()=>{this._rotateCameraToDefault()}),this._addListeners()}moveCameraToDefault(){this._options.cameraEl.removeAttribute("move-to-target")}}const w=new u({debug:window.location.hash==="#debug"}),P=document.getElementById("reset-camera-button");P.addEventListener("click",()=>{w.moveCameraToDefault()});
